pipeline {
    agent {
        docker {
           image 'iamtanya28/npm-tanya-docker-agent:v1'
            args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    tools {
        jdk 'jdk'
        nodejs 'node17'
    }

    environment {
        SONAR_PROJECT_KEY = 'starbucks-project'
    }

    stages {
        stage('Checkout from Git') {
            steps {
                sh "echo passed checkout"
                // git branch: 'main', credentialsId: 'github-token', url: 'https://github.com/Aseemakram19/starbucks-kubernetes.git'
            }
        }
        // stage("Sonarqube Analysis") {
        //     steps {
        //         withSonarQubeEnv('SonarQube') {
        //             sh '''
        //                 $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=starbucks -Dsonar.projectKey=starbucks
        //             '''
        //         }
        //     }
        // }
          stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') { 
                    // Uses SonarQube configuration from Jenkins
                    withCredentials([string(credentialsId: 'SonarQube', variable: 'SONAR_LOGIN')])
                     {

                        sh 'sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.login=$SONAR_LOGIN'
                    }
                }
            }
        }

        stage("Quality Gate") {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'SonarQube'
                }
            }
        }

    }
}
